2025-02-09 16:46:54 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:46:56 [scheduling-1] ERROR d.p.dots.scheduler.OrderScheduler - [SCHEDULED ERROR] checkOrdersInDiscogs() 
org.springframework.dao.DuplicateKeyException: Write operation error on server ac-fqxvp0u-shard-00-02.kh5tlae.mongodb.net:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: dots-db.Orders index: _id_ dup key: { _id: "4635827-919" }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:99)
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3008)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:605)
	at org.springframework.data.mongodb.core.MongoTemplate.insertDocument(MongoTemplate.java:1536)
	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:1337)
	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:1263)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.insert(SimpleMongoRepository.java:248)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy6/jdk.proxy6.$Proxy113.insert(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy6/jdk.proxy6.$Proxy113.insert(Unknown Source)
	at dev.pablito.dots.services.OrderService.createDatabaseOrder(OrderService.java:276)
	at dev.pablito.dots.services.OrderService.checkOrdersInDiscogs(OrderService.java:117)
	at dev.pablito.dots.scheduler.OrderScheduler.checkOrdersInDiscogs(OrderScheduler.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.mongodb.MongoWriteException: Write operation error on server ac-fqxvp0u-shard-00-02.kh5tlae.mongodb.net:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: dots-db.Orders index: _id_ dup key: { _id: "4635827-919" }', details={}}.
	at com.mongodb.client.internal.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:1091)
	at com.mongodb.client.internal.MongoCollectionImpl.executeInsertOne(MongoCollectionImpl.java:477)
	at com.mongodb.client.internal.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:460)
	at com.mongodb.client.internal.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:454)
	at org.springframework.data.mongodb.core.MongoTemplate.lambda$insertDocument$17(MongoTemplate.java:1542)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:603)
	... 50 common frames omitted
2025-02-09 16:47:12 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:48:19 [scheduling-1] ERROR d.p.dots.scheduler.OrderScheduler - [SCHEDULED ERROR] checkOrdersInDiscogs() 
org.springframework.data.mongodb.ClientSessionException: state should be: server session pool is open
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:143)
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3008)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:605)
	at org.springframework.data.mongodb.core.MongoTemplate.insertDocument(MongoTemplate.java:1536)
	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:1337)
	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:1263)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.insert(SimpleMongoRepository.java:248)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy7/jdk.proxy7.$Proxy120.insert(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy7/jdk.proxy7.$Proxy120.insert(Unknown Source)
	at dev.pablito.dots.services.OrderService.createDatabaseOrder(OrderService.java:276)
	at dev.pablito.dots.services.OrderService.checkOrdersInDiscogs(OrderService.java:117)
	at dev.pablito.dots.scheduler.OrderScheduler.checkOrdersInDiscogs(OrderScheduler.java:34)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: java.lang.IllegalStateException: state should be: server session pool is open
	at com.mongodb.assertions.Assertions.isTrue(Assertions.java:110)
	at com.mongodb.internal.session.ServerSessionPool.get(ServerSessionPool.java:81)
	at com.mongodb.internal.session.BaseClientSessionImpl.getServerSession(BaseClientSessionImpl.java:127)
	at com.mongodb.internal.session.ClientSessionContext.advanceTransactionNumber(ClientSessionContext.java:63)
	at com.mongodb.internal.operation.BulkWriteBatch.<init>(BulkWriteBatch.java:179)
	at com.mongodb.internal.operation.BulkWriteBatch.createBulkWriteBatch(BulkWriteBatch.java:121)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$execute$2(MixedBulkWriteOperation.java:199)
	at com.mongodb.internal.operation.SyncOperationHelper.lambda$withSourceAndConnection$0(SyncOperationHelper.java:124)
	at com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:149)
	at com.mongodb.internal.operation.SyncOperationHelper.lambda$withSourceAndConnection$1(SyncOperationHelper.java:123)
	at com.mongodb.internal.operation.SyncOperationHelper.withSuppliedResource(SyncOperationHelper.java:149)
	at com.mongodb.internal.operation.SyncOperationHelper.withSourceAndConnection(SyncOperationHelper.java:122)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$execute$3(MixedBulkWriteOperation.java:188)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$decorateWriteWithRetries$0(MixedBulkWriteOperation.java:146)
	at com.mongodb.internal.async.function.RetryingSyncSupplier.get(RetryingSyncSupplier.java:67)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:207)
	at com.mongodb.internal.operation.MixedBulkWriteOperation.execute(MixedBulkWriteOperation.java:77)
	at com.mongodb.client.internal.MongoClientDelegate$DelegateOperationExecutor.execute(MongoClientDelegate.java:173)
	at com.mongodb.client.internal.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:1084)
	at com.mongodb.client.internal.MongoCollectionImpl.executeInsertOne(MongoCollectionImpl.java:477)
	at com.mongodb.client.internal.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:460)
	at com.mongodb.client.internal.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:454)
	at org.springframework.data.mongodb.core.MongoTemplate.lambda$insertDocument$17(MongoTemplate.java:1542)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:603)
	... 50 common frames omitted
2025-02-09 16:48:19 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:48:21 [scheduling-1] ERROR d.p.dots.scheduler.OrderScheduler - [SCHEDULED ERROR] checkOrdersInDiscogs() 
org.springframework.dao.DuplicateKeyException: Write operation error on server ac-fqxvp0u-shard-00-02.kh5tlae.mongodb.net:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: dots-db.Orders index: _id_ dup key: { _id: "4635827-919" }', details={}}.
	at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:99)
	at org.springframework.data.mongodb.core.MongoTemplate.potentiallyConvertRuntimeException(MongoTemplate.java:3008)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:605)
	at org.springframework.data.mongodb.core.MongoTemplate.insertDocument(MongoTemplate.java:1536)
	at org.springframework.data.mongodb.core.MongoTemplate.doInsert(MongoTemplate.java:1337)
	at org.springframework.data.mongodb.core.MongoTemplate.insert(MongoTemplate.java:1263)
	at org.springframework.data.mongodb.repository.support.SimpleMongoRepository.insert(SimpleMongoRepository.java:248)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.mongodb.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:158)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy8/jdk.proxy8.$Proxy125.insert(Unknown Source)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy8/jdk.proxy8.$Proxy125.insert(Unknown Source)
	at dev.pablito.dots.services.OrderService.createDatabaseOrder(OrderService.java:276)
	at dev.pablito.dots.services.OrderService.checkOrdersInDiscogs(OrderService.java:117)
	at dev.pablito.dots.scheduler.OrderScheduler.checkOrdersInDiscogs(OrderScheduler.java:33)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:358)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1570)
Caused by: com.mongodb.MongoWriteException: Write operation error on server ac-fqxvp0u-shard-00-02.kh5tlae.mongodb.net:27017. Write error: WriteError{code=11000, message='E11000 duplicate key error collection: dots-db.Orders index: _id_ dup key: { _id: "4635827-919" }', details={}}.
	at com.mongodb.client.internal.MongoCollectionImpl.executeSingleWriteRequest(MongoCollectionImpl.java:1091)
	at com.mongodb.client.internal.MongoCollectionImpl.executeInsertOne(MongoCollectionImpl.java:477)
	at com.mongodb.client.internal.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:460)
	at com.mongodb.client.internal.MongoCollectionImpl.insertOne(MongoCollectionImpl.java:454)
	at org.springframework.data.mongodb.core.MongoTemplate.lambda$insertDocument$17(MongoTemplate.java:1542)
	at org.springframework.data.mongodb.core.MongoTemplate.execute(MongoTemplate.java:603)
	... 50 common frames omitted
2025-02-09 16:49:19 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:50:40 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 80 s 
2025-02-09 16:50:41 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:50:41 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:53:52 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:53:53 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:53:53 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:53:54 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:53:54 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:53:54 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:54:11 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:54:11 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:54:45 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:55:55 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 70 s 
2025-02-09 16:55:56 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:55:57 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:56:04 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:56:05 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:56:07 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:56:08 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:57:07 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:58:36 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 88 s 
2025-02-09 16:58:36 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:58:37 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 16:59:07 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 16:59:08 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:00:07 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:00:08 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:01:07 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:01:08 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:01:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:01:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:02:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:02:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:03:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:03:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:04:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:04:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:05:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:05:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:06:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:06:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:07:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:07:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:08:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:08:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:09:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:09:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:10:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:10:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:11:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:11:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:12:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:12:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:13:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:13:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
2025-02-09 17:14:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED START] checkOrdersInDiscogs()
2025-02-09 17:14:21 [scheduling-1] INFO  d.p.dots.scheduler.OrderScheduler - [SCHEDULED END] checkOrdersInDiscogs() - 0 s 
